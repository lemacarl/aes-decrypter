"use strict";/*!
               *
               *  AES Decrypter
               *
               *  Licensed under the Apache License, Version 2.0 (the "License");
               *  you may not use this file except in compliance with the License.
               *  You may obtain a copy of the License at
               *
               *    https://www.apache.org/licenses/LICENSE-2.0
               *
               *  Unless required by applicable law or agreed to in writing, software
               *  distributed under the License is distributed on an "AS IS" BASIS,
               *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
               *  See the License for the specific language governing permissions and
               *  limitations under the License
               *
               */
function displayToast(e){M.toast({html:e})}function decryptFile(e,t){var r=new FileReader,n=document.querySelector('input[name="input-type"]:checked').value;"hex"===n?r.readAsArrayBuffer(e):r.readAsText(e),r.onload=function(r){var o=CryptoJS.enc.Utf8.parse(t),a=void 0;a="hex"===n?CryptoJS.lib.WordArray.create(r.target.result):r.target.result;var i=getDecryptedOutput({cipherText:a,pass:o,type:n}),c=filterOutput(i,n),d=new Blob([c],{type:"application/octet-stream"}),s=URL.createObjectURL(d);download(e.name,s)}}function download(e,t){var r=document.getElementById("download");r.href=t,r.download=e,r.click()}function getDecryptedOutput(e){var t=void 0;return t="hex"===e.type?CryptoJS.AES.decrypt({ciphertext:e.cipherText},e.pass,{iv:e.pass,mode:CryptoJS.mode.CBC,padding:CryptoJS.pad.Pkcs7}):CryptoJS.AES.decrypt(e.cipherText,e.pass,{iv:e.pass,mode:CryptoJS.mode.CBC,padding:CryptoJS.pad.Pkcs7})}function filterOutput(e,t){var r=void 0;switch(t){case"hex":r=reorganizeHexValues(e.toString(CryptoJS.enc.Hex));break;case"b64":r=e.toString(CryptoJS.enc.Base64);break;case"utf-8":r=e.toString(CryptoJS.enc.Utf8);break;default:r=e.toString()}return r}function reorganizeHexValues(e){for(var t="",r=0,n=0;n<e.length;n+=4)r++,t+=e[n]+e[n+1]+e[n+2]+e[n+3],8===r?(r=0,t+="\n"):t+=" ";return t}!function(){var e=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));"serviceWorker"in navigator&&("https:"===window.location.protocol||e)&&navigator.serviceWorker.register("service-worker.js").then(function(e){e.onupdatefound=function(){if(navigator.serviceWorker.controller){var t=e.installing;t.onstatechange=function(){switch(t.state){case"installed":break;case"redundant":throw new Error("The installing service worker became redundant.")}}}}})["catch"](function(e){console.error("Error during service worker registration:",e)});var t=document.getElementById("file-upload"),r=document.getElementById("file-name"),n=document.getElementById("password"),o=document.getElementById("btn-decrypt");t.addEventListener("change",function(){r.value=t.files[0].name}),o.addEventListener("click",function(e){if(e.preventDefault(),!t.files[0])return void displayToast("Please select a file.");if(!n.value)return void displayToast("Please enter a password.");var o=t.files[0];r.value=o.name,decryptFile(o,n.value)})}();
//# sourceMappingURL=main.min.js.map
